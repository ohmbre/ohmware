#!/bin/bash

setvars() {
    remote_addr=ohmbre #10.0.0.3
    arch=arm64
    gccarch=aarch64
    kconfig=bcmrpi3_defconfig
    dts_subdir=dts/broadcom
    kernel=Image
    upstream_tree=rpi-4.15.y
    upstream_url=https://github.com/raspberrypi/linux.git
    this_dir=$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )
    blds_dir=$this_dir/builds
    wrks_dir=$this_dir/.work
    uppers_dir=$this_dir/.uppers
    upstream_src_dir=$this_dir/$upstream_tree
    ksrc_dir=$this_dir/kernel
    kbld_dir=$blds_dir/kernel
    sbld_dir=$blds_dir/os
    wrk_dir=$wrks_dir/kernel
    upper_dir=$uppers_dir/kernel
    dist_dir=$this_dir/dist
    ssrc_dir=$this_dir/ohmbase

    kmake="make"
    kmake="$make INSTALL_PATH=$dist_dir/boot"
    kmake="$make INSTALL_MOD_PATH=$dist_dir"
    kmake="$make KBUILD_OUTPUT=$bld_dir"
    kmake="$make ARCH=$arch"
    kmake="$make CROSS_COMPILE=$sbld_dir/output/host/bin/$gccarch-ohm-linux-gnu-"
    kmake="$make INITRD=No"
    kmake="$make CCACHE_DIR=$build_dir/.ccache"
    kmake="$make -C $src_dir"
    smake="make BR2_DL_DIR=$sbld_dir/dl BR2_EXTERNAL=$ssrc_dir --directory=$this_dir/buildroot O=$sbld_dir"
}

kmake() {
    $kmake $@
}

smake() {
    $smake $@
}


ksetup() {
    setvars
    mkdir -p $dist_dir
    mkdir -p $ksrc_dir
    mkdir -p $wrk_dir
    mkdir -p $blds_dir
    rm -rf $upper_dir
    mkdir -p $upper_dir
    if [ ! -d $upstream_src_dir ]; then
	git clone -b $upstream_tree $upstream_url $upstream_tree --depth=1
    fi

    umount $ksrc_dir > /dev/null 2>&1 || /bin/true
    [[ $(findmnt -M "$ksrc_dir") ]] || mount -t overlay overlay -o lowerdir=$this_dir/overlay:$upstream_src_dir,upperdir=$upper_dir,workdir=$wrk_dir $ksrc_dir
    for f in $(find $ksrc_dir -name \*.patch); do
	patch $(dirname $f)/$(basename $f .patch) $f
    done

    return 0
}

kconfig() {
    ksetup
    echo "running with make command: $make"
    $kmake $config
    $kmake nconfig
    $kmake savedefconfig
    cp $kbld_dir/defconfig $ksrc_dir/arch/$arch/configs/$kconfig
    echo "source directory is: $src_dir"
    cd $ksrc_dir
    git diff arch/$arch/configs/$kconfig > $this_dir/overlay/arch/$arch/configs/$kconfig.patch
    cd $this_dir
    kmake prepare
    return 0
}

kbuild() {
    ksetup
    echo "building in $kbld_dir ..."
    echo "running with make command: $kmake"
    kmake -j10
    dtc -q -I dts -O dtb -o $kbld_dir/arch/$arch/boot/$dts_subdir/dt-blob.bin $ksrc_dir/arch/$arch/boot/$dts_subdir/dt-blob.dts
    version=`$make -f $bld_dir/Makefile kernelrelease 2> /dev/null`
    echo "built version $version"
    return 0
}

dist_modules() {
    ksetup
    echo "running with make command: $kmake"
    kmake -j10 modules_install
    return 0
}

dist() {
    setvars
    cp $kbld_dir/arch/$arch/boot/$dts_subdir/ohmbre.dtb $dist_dir/boot/ohmbre.dtb
    cp $kbld_dir/arch/$arch/boot/$dts_subdir/debug.dtb $dist_dir/boot/debug.dtb
    cp $kbld_dir/arch/$arch/boot/$kernel $dist_dir/boot/ohmbre.img
    cp $ksrc_dir/arch/$arch/boot/config.txt $dist_dir/boot/config.txt
    cp $ksrc_dir/arch/$arch/boot/cmdline.txt $dist_dir/boot/cmdline.txt
    cp $kbld_dir/arch/$arch/boot/$dts_subdir/dt-blob.bin $dist_dir/boot/dt-blob.bin
}

firmware() {
    setvars
    wget -O $dist_dir/boot/bootcode.bin https://raw.githubusercontent.com/raspberrypi/firmware/next/boot/bootcode.bin
    wget -O $dist_dir/boot/fixup.dat https://raw.githubusercontent.com/raspberrypi/firmware/next/boot/fixup.dat
    wget -O $dist_dir/boot/start.elf https://raw.githubusercontent.com/raspberrypi/firmware/next/boot/start.elf
}



sysconfig() {
    setvars
    echo "running with make command: $smake"
    smake ohmbre_defconfig
    smake nconfig
    smake savedefconfig
}

system() {
    setvars
    echo "running with make command: $smake"
    smake
}
